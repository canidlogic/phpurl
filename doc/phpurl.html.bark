`%xml en;
`
` Language versions:
`
`   en - English (US)
`
` You must compile this Bark document with bark before you can view it
` as a valid HTML document.
`
` This Bark document and the HTML document it compiles to are under the
` license described in section C "Specification license" of this
` document.
`
`^{
<!DOCTYPE html>
<!-- Auto-generated by Bark -->
`en=<html lang="en">
  <head>
    <meta charset="utf-8"/>
`^}
`en=`#=    <title>PHPURL specification</title>
`^{
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link href="SourceFonts.css" rel="stylesheet"/>
    <style>

body {
  max-width: 35em;
  padding-left: 0.25em;
  padding-right: 0.25em;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 3.5em;
  font-family: 'Source Serif', serif;
  background-color: WhiteSmoke;
  color: black;
}

:link {
  text-decoration: none;
  color: blue
}

:visited {
  text-decoration: none;
  color: blue
}

.tt {
  font-family: 'Source Code Pro', monospace;
  background-color: LightGray;
}

hr {
  margin-top: 2.5em;
}

#toc {
  background-color: white;
  padding: 0.5em;
  border: thin solid;
  margin-bottom: 1.5em;
  font-family: 'Source Sans 3', sans-serif;
}

#tochead {
  text-align: center;
  font-weight: bold;
  margin-bottom: 1em;
}

#toc ul {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 1.5em;
  padding-right: 1.5em;
}

h1 {
  font-family: 'Source Sans 3', sans-serif;
  margin-bottom: 0;
  text-align: center;
}

#verline {
  font-family: 'Source Sans 3', sans-serif;
  font-size: 150%;
  text-align: center;
}

h2 {
  font-family: 'Source Sans 3', sans-serif;
}

h3 {
  font-family: 'Source Sans 3', sans-serif;
}

h4 {
  font-family: 'Source Sans 3', sans-serif;
}

li {
  font-family: 'Source Sans 3', sans-serif;
}

#footline {
  font-size: smaller;
  text-align: right;
}

.iblock {
  font-family: 'Source Sans 3', sans-serif;
}

.cblock {
  background-color: white;
  color: indigo;
  padding: 0.5em;
  font-family: 'Source Code Pro', monospace;
  border: thin dotted;
  overflow: auto;
}

.chead {
  text-decoration: underline;
  margin-top: 1em;
  margin-bottom: 1em;
}

.chead:first-child {
  margin-top: 0;
}

.ci {
  margin-left: 2em;
  margin-top: 1em;
}

#titlebox {
  background-color: white;
  margin-top: 3em;
  margin-bottom: 3em;
  padding-top: 0.5em;
  padding-bottom: 1.5em;
  border: medium double;
}

    </style>
  </head>
  <body>
`^}

<div id="titlebox">
`en=<h1>PHPURL specification</h1>
`en=<div id="verline">Version 1.0</div>
</div>

<div id="toc">
`en=<div id="tochead">Table of Contents</div>
<ul>
`en=  <li>1. <a href="#sec1">Introduction</a>
    <ul>
`en=      <li>1.1 <a href="#sec1p1">Deployment</a></li>
`en=      <li>1.2 <a href="#sec1p2">PURL integration</a></li>
    </ul>
`en=  <li>2. <a href="#sec2">Data format</a></li>
`en=  <li>3. <a href="#sec3">Operation</a></li>
</ul>
<div>;_</div>
<ul>
`en=  <li>A. <a href="#secA">External references</a></li>
`en=  <li>B. <a href="#secB">Building the specification</a></li>
`en=  <li>C. <a href="#secC">Specification license</a></li>
</ul>
</div>

`en=<h2 id="sec1">1. Introduction</h2>

`en=<p>PHPURL is a simple PHP script for enabling persistent-URL (PURL) references on a website.</p>

`en=<p>A PURL is a URL that never changes.  In order to allow resources to move around, a PURL is an indirect link;; when a user navigates to the PURL, the PURL will redirect the user to the current location of the resource.  When the resource changes location, the PURL target can be changed but all the links to the PURL can remain the same.  This allows PURLs to be permanent even when the location of the resources they reference are not permanent.</p>

`en=<p>PHPURL can be integrated with the Internet Archive <a href="#extIapurl">[IAPURL]</a> service to allow for local server control of PURLs.  See ;&S1.2 <a href="#sec1p2">PURL integration</a> for further information.</p>

`en=<h3 id="sec1p1">1.1 Deployment</h3>

`en=<p>In order to deploy PHPURL to a server, begin by simply copying the <span class="tt">phpurl.php</span> script to a desired location in the public directories of the server.  You may rename the file, but the <span class="tt">.php</span> extension should be kept intact so that the server knows to run the script as a PHP file.  The server must be configured to run PHP scripts for PHPURL to work.</p>

`en=<p>The second step is to create a JSON data file that contains the mapping of PURL names to current URL locations.  The format of this data file is described in ;&S2 <a href="#sec2">Data format</a>.  You should store this JSON data file somewhere outside the public directories on the server, but somewhere that it can be accessed by the PHP script.</p>

`en=<p>The third step is to modify the deployed PHPURL script so that it has the location of the JSON data file.  See the documentation at the start of the PHPURL script for instructions how to do this.</p>

`en=<p>Once these three steps are completed, PHPURL is deployed.  You can update the mappings of PURLs to resource locations at any time by modifying or overwriting the JSON data file.  To visit a PURL, you can invoke the PHP script as follows:</p>

<blockquote class="cblock">
phpurl.php?link=example
</blockquote>

`en=<p>In the above example, <span class="tt">phpurl.php</span> should be changed to the location and name of the deployed PHPURL script.  <span class="tt">example</span> is the PURL name that is requested in the above example.  You should replace it with the desired PURL.</p>

`en=<p>See ;&S1.2 <a href="#sec1p2">PURL integration</a> for information about how to integrate PHPURL into the Internet Archive <a href="#extIapurl">[IAPURL]</a> service.</p>

`en=<p>If you wish to customize the error message pages and the temporarily offline page, see the documentation within the script.</p>

`en=<h3 id="sec1p2">1.2 PURL integration</h3>

`en=<p>PHPURL can be integrated into the <a href="#extIapurl">[IAPURL]</a> service offered by the Internet Archive <a href="#extIa">[IA]</a>.  This integration allows you to have an unlimited number of PURLs at the Internet Archive <span class="tt">purl.org</span> domain while controlling the PURLs locally on your server with PHPURL.</p>

`en=<p>To set up this integration, you first must set up PHPURL on your server by following the instructions in ;&S1.1 <a href="#sec1p1">Deployment</a>.</p>

`en=<p>After PHPURL is set up on your server, you must have a PURL domain at the Internet Archive.  You can do this by setting up an account at the Internet Archive <a href="#extIa">[IA]</a> and then visiting the PURL service administration page at <a href="#extIapurl">[IAPURL]</a>.  This will allow you to create a new domain for PURLs.</p>

`en=<p>Once you have created a domain for PURLs, you can define PURLs within that domain.  To integrate with PHPURL, you must create a PURL within your domain that has the special type <span class="tt">partial</span>.  This partial PURL should end with a slash <span class="tt">/</span> character.  The target of this partial PURL should be the location of your deployed PHPURL script, with <span class="tt">?link=</span> appended to it.</p>

`en=<p>For example, PHPURL integration for the Canidtech website defines the PURL domain <span class="tt">/canidtech</span> and then defines the following PURL:</p>

<ul>
`en=<li><b>Name:</b> <span class="tt">/canidtech/r/</span></li>
`en=<li><b>Type:</b> <span class="tt">partial</span></li>
`en=<li><b>Target:</b> <span class="tt">https://www.canidtech.com/jump.php?link=</span></li>
</ul>

`en=<p>The <span class="tt">jump.php</span> target is a deployed PHPURL script on the Canidtech server.  Then, links of the type:</p>

<blockquote class="cblock">
https://www.purl.org/canidtech/r/example
</blockquote>

`en=<p>will be redirected to the Canidtech PHPURL addresses like this:</p>

<blockquote class="cblock">
https://www.canidtech.com/jump.php?link=example
</blockquote>

`en=<p>The script will then redirect to the current location of the <span class="tt">example</span> PURL, which is stored in the data file on the local server.</p>

`en=<p>This method therefore allows for an unlimited number of PURLs within the <span class="tt">purl.org</span> domain with just one partial PURL defined at the Internet Archive and all the rest controlled locally on the Canidtech server with PHPURL.</p>

`en=<h2 id="sec2">2. Data format</h2>

`en=<p>This section describes the data format of the JSON file that PHPURL uses to store the mapping of PURL names to current locations.</p>

`en=<p>The data file must follow the JSON format as described at <a href="#extJson">[JSON]</a>.  It must store a single JSON object, which is a mapping of string keys to string values.  The string keys are the PURL names while the string values are the current URL locations.</p>

`en=<p>If the current URL location begins with <span class="tt">phpurl://</span> then the URL is a special PHPURL value.  The only PHPURL value currently supported is <span class="tt">phpurl://offline</span> which means that the PURL is currently unavailable.</p>

`en=<p>Besides the <span class="tt">phpurl://</span> locations, all other locations must begin either with <span class="tt">http://</span> or <span class="tt">https://</span>.</p>

`en=<p>An example JSON data file for PHPURL looks like this:</p>

<blockquote class="cblock">
`#L:
{(<br/>
  "example": "http://example.com/",<br/>
  "links": "http://example.com/links.html",<br/>
  "future": "phpurl://offline"<br/>
{)
`$
</blockquote>

`en=<h2 id="sec3">3. Operation</h2>

`en=<p>This section describes the operation of the PHPURL script.  For further information, see the documentation within the script file.</p>

`en=<p>The first step in the script is to define the location of the JSON data file.  This is simply a string constant.  The value is set during <a href="#sec1p1">deployment</a> (;&S1.1) of the script.</p>

`en=<p>The second step in the script is to load the JSON data file into memory and parse it as JSON.  If there is any error, an Internal Server Error will be reported.</p>

`en=<p>The third step is to check in the <span class="tt">$_GET</span> associative array whether the variable <span class="tt">link</span> is defined.  This is done by checking whether the value passes <span class="tt">is_string()</span> <i>and</i> the length of the trimmed string is greater than zero.  The value is automatically trimmed of leading and trailing whitespace.</p>

`en=<p>If no <span class="tt">link</span> variable was passed or it is empty, a Not Found error will be reported.</p>

`en=<p>Otherwise, the variable value will be used to look up a key within the parsed JSON object.  If this key passes <span class="tt">is_string()</span> then processing proceeds;; else, a Not Found error is reported.</p>

`en=<p>The final step is to redirect the user appropriately to the current location that was looked up.  If the location starts with the special <span class="tt">phpurl://</span> prefix, then it must be <span class="tt">phpurl://offline</span> or an Internal Server Error is reported.  If it is <span class="tt">phpurl://offline</span> then the script will report that the resource is temporarily offline.  If the location starts with <span class="tt">http://</span> or <span class="tt">https://</span> then the script will redirect the client to that location.  Otherwise, the location is invalid and an Internal Server Error will be reported.</p>

<hr/>

`en=<h2 id="secA">A. External references</h2>

`en=<p id="extBark">[BARK] ;-m Bark project<br/>
Canidtech<br/>
<a href="https://www.purl.org/canidtech/r/bark">https://www.purl.org/canidtech/r/bark</a></p>

`en=<p id="extIa">[IA] ;-m Internet Archive<br/>
<a href="https://archive.org/">https://archive.org/</a></p>

`en=<p id="extIapurl">[IAPURL] ;-m PURL service<br/>
Internet Archive<br/>
<a href="https://archive.org/services/purl/">https://archive.org/services/purl/</a></p>

`en=<p id="extJson">[JSON] ;-m JSON<br/>
<a href="https://www.json.org/json-en.html">https://www.json.org/json-en.html</a></p>

`en=<h2 id="secB">B. Building the specification</h2>

`en=<p>The HTML source code of this specification is auto-generated by <a href="#extBark">[BARK]</a> from the <a href="phpurl.html.bark">phpurl.html.bark</a> source file.  Changes should be made to the Bark source file, which should then be recompiled with Bark, instead of directly modifying the HTML code.</p>

`en=<p>The webfonts used to render this specification are included in the <span class="tt">fonts</span> subdirectory.  Please see the <a href="fonts/README.txt">README</a> file in that subdirectory for further information about the webfonts and their licenses.</p>

`en=<h2 id="secC">C. Specification license</h2>

`^{
` The following code was originally auto-generated from
` creativecommons.org, but it has been manually modified to clean up the
` HTML source code so that it validates correctly:
<div>
<a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png" /></a><br />PHPURL Specification by Multimedia Data Technology Inc is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International License</a>.<br />Permissions beyond the scope of this license may be available at <a href="https://www.canidtech.com/">https://www.canidtech.com/</a>.
</div>
`^}

`#L:
<hr/>
<div id="footline">
Multimedia Data Technology, Inc.<br/>
<a href="https://www.canidtech.com/">www.canidtech.com</a><br/>
<br/>
`en=Written by Noah Johnson<br/>
<span class="tt">noah.johnson{@loupmail.com</span><br/>
<br/>
`en=February 2021
</div>
`$

  </body>
</html>
